# 지역변수(loval variable) : 함수 내에서 정의된 변수
# 1. 함수 내에서만 사용
# 2. 함수가 호출되면 변수도 생성되고, 함수가 종료되면 변수도 소멸한다
# 3. 지역변수가 전역변수보다 우선순위가 높음
# 4. 함수 내부에서 할당연산자 = 사용하는 식에서 변수는 지역변수로 인식
# 5. 함수 내부에서 전역변수를 변경할 떄는 global 키워드 사용해야 함
a = 2
def show(a): #매개변수 a => 함수 내부에서 지역변수로 사용
    a += 1 #
    print('show() 함수')
    print('지역변수) a:',a)

show(10)
print('전역변수) a:',a)
print('----------------------')
# ------------------------------------------
def show2():
    a = 1
    a = a+1
    print('show2() 함수) a:',a)
show2()
print('----------------------')
# ------------------------------------------
a = 8 # 전역변수 a => 함수 밖에서 정의된 변수

def show3():
    print('show3() 함수) a:', a) #전역변수 a 사용

show3()
print('----------------------')
# ------------------------------------------

b = 1

def add():
    print(f'add() 함수) a: {a}, b:{b}')  # 전역변수 a 사용

add()
print(f'전역 변수) a: {a}, b:{b}')
print('----------------------')
# ------------------------------------------

def add2():
    global a
    a += 1 #전역변수 a에 1을 더함
    c = a + b
    print(f'add2() 함수) a: {a}, b:{b}, c:{c}')

print(f'함수 이전, a: {a}')
add2()
print(f'함수 이후, a: {a}')
print('----------------------')
# ------------------------------------------
# 예시)

def sub(x,y):
    global a
    a = 7 #전역변수
    x,y = y,x #지역변수
    b = 3 #지역변수
    print(f'a:{a}, b:{b}, x:{x}, y:{y}')

a,b,x,y = 1,2,3,4
sub(x,y)
print(f'a:{a}, b:{b}, x:{x}, y:{y}')
print('----------------------')
# ------------------------------------------
a = 1

def show():
    print('show() 함수',id(a))

show()
print('  전역 변수 ',id(a))
print('----------------------')
# ------------------------------------------




















