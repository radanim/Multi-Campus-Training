12/30(리눅스)
1. ls -a : 숨김파일 확인 (. -> 현재 위치/ .. -> 상위 위치)
2. cd : change directory의 약자
3. touch : 파일을 만드는 명령어
4. mkdir : 폴더를 만드는 명렁어
5. open : 파일을 여는 명령어
6. 절대경로 vs 상대경로 
	6-1. 절대경로 : option command c
	6-2.  상대경로 : cd로 일일이 이동
7. rm : 삭제 명령어
	7-1. rm a.txt (a.txt 삭제)
	7-2. rm -r test/  (test 폴더 삭제)
	7-3 rm * (asterisk) 
		ex) rm *.txt (txt 모두 삭제)
		ex) rm -rf * (폴더 안에 있는 모든 파일 삭제)(강제)


VSCODE

1. TIL (Today I Learned)

MARKDOWN : 개발자들의 문서 작성 양식 & 문법

1.  #, ##, ### 으로 문서의 논리적 뼈대 생성
2.  *, -  : 리스트 생성
3.  > : 인용문 적기
4.  ``` : syntax 하이라이팅
5.  `문자` : 인라인 블록
6.  \`#\` : `#`
7. ![이미지 이름](이미지의 주소) 
8.  링크 : [링크 이름](링크의 주소)
9. | (파이프) | | |  : 표 만들기 


git
- 버전 관리
- U : untracked , 추적하고 있지 않는 상황
- A : add 한 상황
- M : Modify, 수정하고 add하기 전

  0. git status -> 현재 상황
1. git init (git initiation) : 특정 폴더를 깃으로 관리를 시작하겠다
	주의) 홈 폴더에서는 이 명령어를 사용하지 않습니다. (-> .git 폴더 생성됨)
	주의) 
2. git add 파일명 : U -> A (git add ./폴더이름/)
3. git commit -m ‘커밋메시지’
4. git log 
5. git log —oneline : git log를 보다 더 깔끔하게 표현
6. git log —oneline —graph 
7. git checkout head~2
8. git checkout dc2e36f
9. git checkout master
11. 이름 및 메일 설정
	git config --global user.name "radanim"
	git config --global user.email "nweda@naver.com"
12. 이름 및 메일 삭제
	git config --global --unset user.name
	git config --global --unset user.email
13. git remote add <이름><주소> : 원격 저장소(remote) 등록
	git remote add origin https://github.com/codnjs3575/lifecycle.git (연결)

14. git remote -v : 원격 저장소 조회
15. git remote rm <이름> or git remote remove <이름> : 원격 저장소 연결 삭제
16. git push origin master : origin이라는 이름의 원격저장소의 master 브랜치에 push
17. git push -u origin master —force : 강제 푸쉬


+ .gitignore : 특정 파일 혹은 폴더에 대해 git이 버전 관리를 못하도록 지정
1. .gitignore에 작성하는 목록
	1. 민감한 개인정보 파일(전화번호,계좌번호, 비밀번호, API KEY)
	2. OS(운영체제)에서 활용되는 파일
	3. IDE(통합 개발환경-pycham) 혹은 Text editor(vscode) 등에서 활용되는 파일
		ex. 예) pycham -> .idea/
	4. 개발 언어(python) 혹은 프레임 워크(django)에서 사용되는 파일
		ex. 가상 환경 : venv/ 
		ex. __pychche__/
2. .gitignore 작성 시 주의 사항
    1. 반드시 이름을 .gitignore로 작성 ( . -> 숨김 파일 의미)
    2. .gitignore 파일은 .git 폴더와 동일한 위치에 생성
    3. 제외하고싶은 파일은 반드시 git add 전에 .gitignore에 작성
3. .gitignore 작성하기 
    1. https://www.toptal.com/developers/gitignore 에서 검색 후 복붙
    2. .gitignore 파일 작성 후 git add .
    3. 사이클 돌리면서 commit

+ clone / pull
1. clone : 원격 저장소의 커밋 내역을 모두 가져와서, 로컬 저장소를 생성하는 명령어
	git clone <원격 저장소 주소>
	ex. git clone http://github.com/codnjs3575/TIL.git
	git init / git remote add가 이미 수행되어 있음
2. pull : 원격 저장소의 변경 사항을 가져와서, 로컬 저장소를 업데이트하는 명령어
	git pull <저장소 이름><브랜치 이름>
	ex. git pull origin master

순서) git pull -> git add -> git commit -> git push






